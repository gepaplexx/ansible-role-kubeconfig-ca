---
- name: "create backup of current kubeconfig file"
  ansible.builtin.copy:
    src: "{{ openshift_kubeconfig_file }}"
    dest: "{{ openshift_kubeconfig_file }}.bkp"
    remote_src: true
    mode: "600"

- name: "extract current CA from openshift cluster"
  environment:
    KUBECONFIG: "{{ openshift_kubeconfig_file }}"
    CERTPATH: "{{ kubeconfig_ca_cert_path }}"
  ansible.builtin.shell:
    cmd: |
      POD=$(oc --insecure-skip-tls-verify get pods -n openshift-authentication --no-headers | cut -d " " -f1 | head -n 1)
      oc --insecure-skip-tls-verify -n openshift-authentication rsh "${POD}" cat /run/secrets/kubernetes.io/serviceaccount/ca.crt > "${CERTPATH}"/ingress-ca.crt
  changed_when: true

- name: Slurp ingress-ca.crt
  slurp:
    src: "{{ kubeconfig_ca_cert_path }}/ingress-ca.crt"
  register: ca_cert

- name: Slurp current kubeconfig
  slurp:
    src: "{{ openshift_kubeconfig_file }}"
  register: kubeconfig

- name: Read kubeconfig to dictionary
  set_fact:
    kubeconfig_content: "{{ kubeconfig['content'] | b64decode | from_yaml }}"

- name: debug
  debug:
    msg: "{{ kubeconfig_content }}"

- name: Patch kubeconfig dictionary
  set_fact:
    kubeconfig_data: "{{ kubeconfig_content | combine(changeddata, recursive=True) }}"
  vars:
    changeddata:
      clusters:
        - cluster:
            server: "{{ kubeconfig_content['clusters'][0]['cluster']['server'] }}"
            certificate-authority-data: "{{ ca_cert['content'] }}"
          name: "{{ kubeconfig_content['clusters'][0]['name'] }}"


- name: "Write changed kubeconfig file"
  ansible.builtin.copy:
    content: "{{ kubeconfig_data | to_nice_yaml }}"
    dest: "{{ openshift_kubeconfig_file }}"
    backup: true

- name: "Copy kubeconfig to userlocation"
  ansible.builtin.copy:
    content: "{{ kubeconfig_data | to_nice_yaml }}"
    dest: "{ kubeconfig_ca_user_kubeconfig }}"
    backup: true


- name: "delete ingress-ca.crt"
  ansible.builtin.file:
    state: absent
    path: "{{ kubeconfig_ca_cert_path }}/ingress-ca.crt"
...
